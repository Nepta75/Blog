{"ast":null,"code":"var _jsxFileName = \"/home/lokman/cours/Blog/front/blog/src/pages/admin/PostAdminPage/PostCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getRessource, createRessource } from '../../../services/apiServices';\nimport { PostForm } from './PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCreate = ({\n  postId\n}) => {\n  _s();\n\n  const [inputs, setInputs] = useState({});\n  const history = useHistory();\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const getValue = name => {\n    return inputs[name] || \"\";\n  };\n\n  useEffect(() => {\n    if (!postId) return null;\n    getRessource('post', postId).then(data => {\n      if (data.success) {\n        setInputs({\n          title: data.title,\n          id: data._id,\n          titleDesc: data.title_description,\n          imageUrl: data.image,\n          content: data.contenu\n        });\n      }\n    });\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      handleInputChange: handleInputChange,\n      getValue: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          createRessource('post', {\n            title: getValue(\"title\"),\n            title_description: getValue(\"titleDesc\"),\n            image: getValue(\"imageUrl\"),\n            contenu: getValue(\"content\")\n          });\n          history.push('/admin');\n        },\n        type: \"submit\",\n        children: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostCreate, \"I2PSRtN99dUo2dv3+Shh5lo/49I=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostCreate;\nexport { PostCreate };\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCreate\");","map":{"version":3,"sources":["/home/lokman/cours/Blog/front/blog/src/pages/admin/PostAdminPage/PostCreate.jsx"],"names":["React","useEffect","useState","Fragment","useHistory","getRessource","createRessource","PostForm","PostCreate","postId","inputs","setInputs","history","handleInputChange","event","persist","target","name","value","getValue","then","data","success","title","id","_id","titleDesc","title_description","imageUrl","image","content","contenu","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,+BAA9C;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA;AADkB,CAAD,KAEb;AAAA;;AAEJ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,OAAN;AACAJ,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAC,GAAGA,MAAJ;AAAY,OAACI,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAA9C,KAAL,CAAP,CAAT;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAIF,IAAD,IAAU;AACzB,WAAOP,MAAM,CAACO,IAAD,CAAN,IAAgB,EAAvB;AACD,GAFD;;AAIAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACQ,MAAL,EAAa,OAAO,IAAP;AAEbJ,IAAAA,YAAY,CAAC,MAAD,EAASI,MAAT,CAAZ,CAA6BW,IAA7B,CAAkCC,IAAI,IAAI;AACxC,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChBX,QAAAA,SAAS,CAAC;AACRY,UAAAA,KAAK,EAAEF,IAAI,CAACE,KADJ;AAERC,UAAAA,EAAE,EAAEH,IAAI,CAACI,GAFD;AAGRC,UAAAA,SAAS,EAAEL,IAAI,CAACM,iBAHR;AAIRC,UAAAA,QAAQ,EAAEP,IAAI,CAACQ,KAJP;AAKRC,UAAAA,OAAO,EAAET,IAAI,CAACU;AALN,SAAD,CAAT;AAOD;AACF,KAVD;AAYD,GAfQ,EAeN,CAACtB,MAAD,CAfM,CAAT;AAiBA,sBACE,QAAC,QAAD;AAAA,4BACA,QAAC,QAAD;AACE,MAAA,iBAAiB,EAAEI,iBADrB;AAEE,MAAA,QAAQ,EAAEM;AAFZ;AAAA;AAAA;AAAA;AAAA,YADA,eAKA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AACE,QAAA,OAAO,EAAE,MAAM;AACbb,UAAAA,eAAe,CAAC,MAAD,EAAS;AACtBiB,YAAAA,KAAK,EAAEJ,QAAQ,CAAC,OAAD,CADO;AAEtBQ,YAAAA,iBAAiB,EAAER,QAAQ,CAAC,WAAD,CAFL;AAGtBU,YAAAA,KAAK,EAAEV,QAAQ,CAAC,UAAD,CAHO;AAItBY,YAAAA,OAAO,EAAEZ,QAAQ,CAAC,SAAD;AAJK,WAAT,CAAf;AAMAP,UAAAA,OAAO,CAACoB,IAAR,CAAa,QAAb;AACD,SATH;AAUE,QAAA,IAAI,EAAC,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzDD;;GAAMxB,U;UAKYJ,U;;;KALZI,U;AA2DN,SAASA,UAAT","sourcesContent":["import React, {useEffect, useState, Fragment} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getRessource, createRessource } from '../../../services/apiServices'\nimport { PostForm } from './PostForm';\n\nconst PostCreate = ({\n  postId\n}) => {\n\n  const [inputs, setInputs] = useState({});\n  const history = useHistory();\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n\n  const getValue = (name) => {\n    return inputs[name] || \"\";\n  }\n\n  useEffect(() => {\n    if (!postId) return null;\n\n    getRessource('post', postId).then(data => {\n      if (data.success) {\n        setInputs({\n          title: data.title,\n          id: data._id,\n          titleDesc: data.title_description,\n          imageUrl: data.image,\n          content: data.contenu,\n        });\n      }\n    });\n\n  }, [postId]);\n\n  return (\n    <Fragment>\n    <PostForm \n      handleInputChange={handleInputChange}\n      getValue={getValue}\n    />\n    <div className=\"button-container\">\n      <button\n        onClick={() => {\n          createRessource('post', {\n            title: getValue(\"title\"),\n            title_description: getValue(\"titleDesc\"),\n            image: getValue(\"imageUrl\"),\n            contenu: getValue(\"content\"),\n          });\n          history.push('/admin');\n        }}\n        type=\"submit\"\n      >\n        Ajouter\n      </button>\n    </div>\n  </Fragment>\n  );\n}\n\nexport { PostCreate }"]},"metadata":{},"sourceType":"module"}