{"ast":null,"code":"var _jsxFileName = \"/home/lokman/cours/Blog/front/blog/src/components/admin/PostDetailsAdmin/PostDetailsAdmin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { PostDetailsAdminStyled } from './PostDetailsAdmin.style';\nimport { getRessource, deleteRessource, updateRessource } from '../../../services/apiServices';\nimport { PostForm } from './PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetailsAdmin = () => {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const [inputs, setInputs] = useState({});\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const getValue = name => {\n    return inputs[name] || \"\";\n  };\n\n  useEffect(() => {\n    if (postId) {\n      const fetchMyAPI = async () => {\n        const data = await getRessource('post', postId);\n\n        if (data && data.length > 0) {\n          setInputs({\n            title: data.title,\n            id: data._id,\n            titleDesc: data.title_description,\n            imageUrl: data.image,\n            content: data.contenu\n          });\n        }\n      };\n\n      fetchMyAPI();\n    }\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(PostDetailsAdminStyled, {\n    children: [postId && getValue(\"id\") && getValue(\"id\").length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostForm, {\n        handleInputChange: handleInputChange,\n        getValue: getValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateRessource('post', getValue(\"id\"), {\n            title: getValue(\"title\"),\n            title_description: getValue(\"titleDesc\"),\n            image: getValue(\"imageUrl\"),\n            _id: getValue(\"id\"),\n            contenu: getValue(\"content\")\n          }),\n          type: \"submit\",\n          children: \"Mettre \\xE0 jour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteRessource('post', getValue(\"id\")),\n          type: \"submit\",\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [\"Aucun r\\xE9sultat post avec l'id: \", postId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), !postId && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostForm, {\n        handleInputChange: handleInputChange,\n        getValue: getValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteRessource('post', getValue(\"id\")),\n          type: \"submit\",\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetailsAdmin, \"I60cCxKoGPkJB7ps986XDk8jwL0=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetailsAdmin;\nexport { PostDetailsAdmin };\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetailsAdmin\");","map":{"version":3,"sources":["/home/lokman/cours/Blog/front/blog/src/components/admin/PostDetailsAdmin/PostDetailsAdmin.jsx"],"names":["React","useState","useEffect","Fragment","useParams","PostDetailsAdminStyled","getRessource","deleteRessource","updateRessource","PostForm","PostDetailsAdmin","postId","inputs","setInputs","handleInputChange","event","persist","target","name","value","getValue","fetchMyAPI","data","length","title","id","_id","titleDesc","title_description","imageUrl","image","content","contenu"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { PostDetailsAdminStyled } from './PostDetailsAdmin.style';\nimport { getRessource , deleteRessource, updateRessource} from '../../../services/apiServices';\nimport { PostForm } from './PostForm';\n\nconst PostDetailsAdmin = () => {\n  const { postId } = useParams();\n  const [inputs, setInputs] = useState({});\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n\n  const getValue = (name) => {\n    return inputs[name] || \"\";\n  }\n\n  useEffect(() => {\n    if (postId) {\n      const fetchMyAPI = async () => {\n        const data = await getRessource('post', postId);\n        if (data && data.length > 0) {\n          setInputs({\n            title: data.title,\n            id: data._id,\n            titleDesc: data.title_description,\n            imageUrl: data.image,\n            content: data.contenu,\n          });\n        }\n      }\n      fetchMyAPI();\n    }\n  }, [postId]);\n\n  return (\n    <PostDetailsAdminStyled>\n      {postId && getValue(\"id\") && getValue(\"id\").length > 0 ?\n        <Fragment>\n          <PostForm \n            handleInputChange={handleInputChange}\n            getValue={getValue}\n          />\n          <div className=\"button-container\">\n            <button\n              onClick={() => updateRessource('post', getValue(\"id\"), {\n                title: getValue(\"title\"),\n                title_description: getValue(\"titleDesc\"),\n                image: getValue(\"imageUrl\"),\n                _id: getValue(\"id\"),\n                contenu: getValue(\"content\"),\n              })}\n              type=\"submit\"\n            >\n              Mettre à jour\n            </button>\n            <button\n              onClick={() => deleteRessource('post', getValue(\"id\"))}\n              type=\"submit\"\n            >\n              Supprimer\n            </button>\n          </div>\n        </Fragment>\n        :\n        <Fragment>\n          Aucun résultat post avec l'id: {postId}\n        </Fragment>\n      }\n      {!postId &&\n        <Fragment>\n        <PostForm \n          handleInputChange={handleInputChange}\n          getValue={getValue}\n        />\n        <div className=\"button-container\">\n          <button\n            onClick={() => deleteRessource('post', getValue(\"id\"))}\n            type=\"submit\"\n          >\n            Supprimer\n          </button>\n        </div>\n      </Fragment>\n      }\n    </PostDetailsAdminStyled>\n  );\n};\n\nexport { PostDetailsAdmin };\n"]},"metadata":{},"sourceType":"module"}