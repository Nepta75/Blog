{"ast":null,"code":"var _jsxFileName = \"/home/lokman/cours/Blog/front/blog/src/components/admin/PostDetailsAdmin/PostDetailsAdmin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { PostDetailsAdminStyled } from './PostDetailsAdmin.style';\nimport { getRessource, deleteRessource, updateRessource } from '../../../services/apiServices';\nimport { PostForm } from './PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetailsAdmin = () => {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const [id, setId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [titleDesc, setTitleDesc] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [inputs, setInputs] = useState({});\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const getValue = name => {\n    return inputs[name] || \"\";\n  };\n\n  console.log('inputs :>> ', inputs);\n  useEffect(() => {\n    if (postId) {\n      const fetchMyAPI = async () => {\n        const data = await getRessource('post', postId);\n        console.log('data :>> ', data);\n\n        if (data && data.length > 0) {\n          setTitle(data.title);\n          setId(data._id);\n          setTitleDesc(data.title_description);\n          setImageUrl(data.image);\n          setContent(data.contenu);\n        }\n      };\n\n      fetchMyAPI();\n    }\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(PostDetailsAdminStyled, {\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PostForm, {\n        handleInputChange: handleInputChange,\n        title: title,\n        titleDesc: titleDesc,\n        content: content,\n        imageUrl: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateRessource('post', id, {\n              title,\n              title_description: titleDesc,\n              image: imageUrl,\n              _id: id,\n              contenu: content\n            }),\n            type: \"submit\",\n            children: \"Mettre \\xE0 jour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteRessource('post', id),\n            type: \"submit\",\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetailsAdmin, \"yPjwhe0Bv6x3W9U4b2Av+RsYaO0=\", false, function () {\n  return [useParams];\n});\n\n_c = PostDetailsAdmin;\nexport { PostDetailsAdmin };\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetailsAdmin\");","map":{"version":3,"sources":["/home/lokman/cours/Blog/front/blog/src/components/admin/PostDetailsAdmin/PostDetailsAdmin.jsx"],"names":["React","useState","useEffect","Fragment","useParams","PostDetailsAdminStyled","getRessource","deleteRessource","updateRessource","PostForm","PostDetailsAdmin","postId","id","setId","title","setTitle","titleDesc","setTitleDesc","imageUrl","setImageUrl","content","setContent","inputs","setInputs","handleInputChange","event","persist","target","name","value","getValue","console","log","fetchMyAPI","data","length","_id","title_description","image","contenu"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router';\nimport { PostDetailsAdminStyled } from './PostDetailsAdmin.style';\nimport { getRessource , deleteRessource, updateRessource} from '../../../services/apiServices';\nimport { PostForm } from './PostForm';\n\nconst PostDetailsAdmin = () => {\n  const { postId } = useParams();\n  const [id, setId] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [titleDesc, setTitleDesc] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [inputs, setInputs] = useState({});\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n\n  const getValue = (name) => {\n    return inputs[name] || \"\";\n  }\n  console.log('inputs :>> ', inputs);\n\n  useEffect(() => {\n    if (postId) {\n      const fetchMyAPI = async () => {\n        const data = await getRessource('post', postId);\n        console.log('data :>> ', data);\n        if (data && data.length > 0) {\n          setTitle(data.title);\n          setId(data._id);\n          setTitleDesc(data.title_description);\n          setImageUrl(data.image);\n          setContent(data.contenu);\n        }\n      }\n      fetchMyAPI();\n    }\n  }, [postId]);\n\n  return (\n    <PostDetailsAdminStyled>\n      <Fragment>\n        <PostForm \n          handleInputChange={handleInputChange}\n          title={title}\n          titleDesc={titleDesc}\n          content={content}\n          imageUrl={imageUrl}\n        />\n        <div className=\"button-container\">\n              <Fragment>\n                <button\n                  onClick={() => updateRessource('post', id, {\n                    title,\n                    title_description: titleDesc,\n                    image: imageUrl,\n                    _id: id,\n                    contenu: content,\n                  })}\n                  type=\"submit\"\n                >\n                  Mettre Ã  jour\n                </button>\n                <button\n                  onClick={() => deleteRessource('post', id)}\n                  type=\"submit\"\n                >\n                  Supprimer\n                </button>\n              </Fragment>\n        </div>\n      </Fragment>\n    </PostDetailsAdminStyled>\n  );\n};\n\nexport { PostDetailsAdmin };\n"]},"metadata":{},"sourceType":"module"}