{"ast":null,"code":"var _jsxFileName = \"/home/lokman/cours/Blog/front/src/pages/admin/UserAdminPage/UserEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { UserAdminPageStyled } from './UserAdminPage.style';\nimport { useParams } from 'react-router-dom';\nimport { getRessource, deleteRessource, updateRessource } from '../../../services/apiServices';\nimport { UserForm } from './UserForm';\nimport { Button } from '../../../components/ui-elements/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserEdit = () => {\n  _s();\n\n  const params = useParams();\n  const [inputs, setInputs] = useState({});\n  const userId = params.userId;\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputs(inputs => ({ ...inputs,\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const getValue = name => {\n    return inputs[name] || \"\";\n  };\n\n  useEffect(() => {\n    if (!userId) return null;\n    getRessource('user', userId).then(data => {\n      if (data) {\n        setInputs({\n          id: data._id,\n          pseudo: data.pseudo,\n          mdp: data.mdp,\n          admin: data.admin,\n          email: data.email\n        });\n      }\n    });\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(UserAdminPageStyled, {\n    children: [/*#__PURE__*/_jsxDEV(UserForm, {\n      handleInputChange: handleInputChange,\n      getValue: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"useredit__button-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateRessource('user', getValue(\"id\"), {\n          pseudo: getValue(\"pseudo\"),\n          mdp: getValue(\"mdp\"),\n          admin: getValue(\"admin\"),\n          email: getValue(\"email\"),\n          _id: getValue(\"id\")\n        }),\n        type: \"submit\",\n        value: \"Mettre \\xE0 jour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => deleteRessource('post', getValue(\"id\")),\n        type: \"submit\",\n        value: \"supprimer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserEdit, \"o47D9xDQL2hJhdSHVyP0WtvPwjM=\", false, function () {\n  return [useParams];\n});\n\n_c = UserEdit;\nexport { UserEdit };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEdit\");","map":{"version":3,"sources":["/home/lokman/cours/Blog/front/src/pages/admin/UserAdminPage/UserEdit.jsx"],"names":["React","useEffect","useState","UserAdminPageStyled","useParams","getRessource","deleteRessource","updateRessource","UserForm","Button","UserEdit","params","inputs","setInputs","userId","handleInputChange","event","persist","target","name","value","getValue","then","data","id","_id","pseudo","mdp","admin","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,eAAxC,QAA+D,+BAA/D;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,+CAAvB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMY,MAAM,GAAGH,MAAM,CAACG,MAAtB;;AAEA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,OAAN;AACAJ,IAAAA,SAAS,CAACD,MAAM,KAAK,EAAC,GAAGA,MAAJ;AAAY,OAACI,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAA9C,KAAL,CAAP,CAAT;AACD,GAHD;;AAKA,QAAMC,QAAQ,GAAIF,IAAD,IAAU;AACzB,WAAOP,MAAM,CAACO,IAAD,CAAN,IAAgB,EAAvB;AACD,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACa,MAAL,EAAa,OAAO,IAAP;AAEbT,IAAAA,YAAY,CAAC,MAAD,EAASS,MAAT,CAAZ,CAA6BQ,IAA7B,CAAkCC,IAAI,IAAI;AACxC,UAAIA,IAAJ,EAAU;AACRV,QAAAA,SAAS,CAAC;AACRW,UAAAA,EAAE,EAAED,IAAI,CAACE,GADD;AAERC,UAAAA,MAAM,EAAEH,IAAI,CAACG,MAFL;AAGRC,UAAAA,GAAG,EAAEJ,IAAI,CAACI,GAHF;AAIRC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAJJ;AAKRC,UAAAA,KAAK,EAAEN,IAAI,CAACM;AALJ,SAAD,CAAT;AAOD;AACF,KAVD;AAYD,GAfQ,EAeN,CAACf,MAAD,CAfM,CAAT;AAiBA,sBACE,QAAC,mBAAD;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,iBAAiB,EAAEC,iBADrB;AAEE,MAAA,QAAQ,EAAEM;AAFZ;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMd,eAAe,CAAC,MAAD,EAASc,QAAQ,CAAC,IAAD,CAAjB,EAAyB;AACrDK,UAAAA,MAAM,EAAEL,QAAQ,CAAC,QAAD,CADqC;AAErDM,UAAAA,GAAG,EAAEN,QAAQ,CAAC,KAAD,CAFwC;AAGrDO,UAAAA,KAAK,EAAEP,QAAQ,CAAC,OAAD,CAHsC;AAIrDQ,UAAAA,KAAK,EAAER,QAAQ,CAAC,OAAD,CAJsC;AAKrDI,UAAAA,GAAG,EAAEJ,QAAQ,CAAC,IAAD;AALwC,SAAzB,CADhC;AAQE,QAAA,IAAI,EAAC,QARP;AASE,QAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMf,eAAe,CAAC,MAAD,EAASe,QAAQ,CAAC,IAAD,CAAjB,CADhC;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAzDD;;GAAMX,Q;UACWN,S;;;KADXM,Q;AA2DN,SAASA,QAAT","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { UserAdminPageStyled } from './UserAdminPage.style';\nimport { useParams } from 'react-router-dom';\nimport { getRessource, deleteRessource, updateRessource } from '../../../services/apiServices';\nimport { UserForm } from './UserForm';\nimport { Button } from '../../../components/ui-elements/Button/Button';\n\nconst UserEdit = () => {\n  const params = useParams();\n  const [inputs, setInputs] = useState({});\n  const userId = params.userId;\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\n  }\n\n  const getValue = (name) => {\n    return inputs[name] || \"\";\n  }\n\n  useEffect(() => {\n    if (!userId) return null;\n\n    getRessource('user', userId).then(data => {\n      if (data) {\n        setInputs({\n          id: data._id,\n          pseudo: data.pseudo,\n          mdp: data.mdp,\n          admin: data.admin,\n          email: data.email,\n        });\n      }\n    });\n\n  }, [userId]);\n\n  return (\n    <UserAdminPageStyled>\n      <UserForm \n        handleInputChange={handleInputChange}\n        getValue={getValue}\n      />\n      <div className=\"useredit__button-container\">\n        <Button\n          onClick={() => updateRessource('user', getValue(\"id\"), {\n            pseudo: getValue(\"pseudo\"),\n            mdp: getValue(\"mdp\"),\n            admin: getValue(\"admin\"),\n            email: getValue(\"email\"),\n            _id: getValue(\"id\"),\n          })}\n          type=\"submit\"\n          value=\"Mettre Ã  jour\"\n        />\n        <Button\n          onClick={() => deleteRessource('post', getValue(\"id\"))}\n          type=\"submit\"\n          value=\"supprimer\"\n        />\n      </div>\n    </UserAdminPageStyled>\n  );\n}\n\nexport { UserEdit }"]},"metadata":{},"sourceType":"module"}