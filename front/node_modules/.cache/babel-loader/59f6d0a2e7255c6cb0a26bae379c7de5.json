{"ast":null,"code":"var _jsxFileName = \"/home/lokman/cours/Blog/front/src/pages/PostPage/PostPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PostPageStyled } from './PostPage.style';\nimport { getRessources, getRessource } from '../../services/apiServices';\nimport { PostInfo } from '../../components/PostInfo/PostInfo';\nimport { PostDetails } from '../../components/PostDetails/PostDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [currentPost, setCurrentPost] = useState(null);\n  const {\n    postId\n  } = useParams();\n  useEffect(() => {\n    if (!postId) {\n      async function fetchMyAPI() {\n        let response = await getRessources('post');\n        setPosts(response);\n      }\n\n      fetchMyAPI();\n    } else {\n      async function fetchMyAPI() {\n        let response = await getRessource('post', postId);\n        setCurrentPost(response);\n      }\n\n      fetchMyAPI();\n    }\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(PostPageStyled, {\n    children: !currentPost ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List des derniers articles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostInfo, {\n        postId: post._id,\n        title: post.title,\n        description: post.title_description,\n        imageUrl: post.image,\n        content: post.contenu\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PostDetails, {\n      postId: currentPost._id,\n      title: currentPost.title,\n      description: currentPost.title_description,\n      imageUrl: currentPost.image,\n      content: currentPost.contenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostPage, \"d5Hv9HntaNAAw+OmWRAHocUObBI=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport { PostPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/home/lokman/cours/Blog/front/src/pages/PostPage/PostPage.jsx"],"names":["React","useState","useEffect","Fragment","useParams","PostPageStyled","getRessources","getRessource","PostInfo","PostDetails","PostPage","posts","setPosts","currentPost","setCurrentPost","postId","fetchMyAPI","response","map","post","_id","title","title_description","image","contenu"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,4BAA5C;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,WAAT,QAA4B,0CAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAaX,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACa,MAAL,EAAa;AACX,qBAAeC,UAAf,GAA4B;AAC1B,YAAIC,QAAQ,GAAG,MAAMX,aAAa,CAAC,MAAD,CAAlC;AACAM,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACD;;AACDD,MAAAA,UAAU;AACX,KAND,MAMO;AACL,qBAAeA,UAAf,GAA4B;AAC1B,YAAIC,QAAQ,GAAG,MAAMV,YAAY,CAAC,MAAD,EAASQ,MAAT,CAAjC;AACAD,QAAAA,cAAc,CAACG,QAAD,CAAd;AACD;;AACDD,MAAAA,UAAU;AACX;AACF,GAdQ,EAcN,CAACD,MAAD,CAdM,CAAT;AAgBA,sBACE,QAAC,cAAD;AAAA,cACG,CAACF,WAAD,gBACC,QAAC,QAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGIF,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACZ,QAAC,QAAD;AAEE,QAAA,MAAM,EAAEA,IAAI,CAACC,GAFf;AAGE,QAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,QAAA,WAAW,EAAEF,IAAI,CAACG,iBAJpB;AAKE,QAAA,QAAQ,EAAEH,IAAI,CAACI,KALjB;AAME,QAAA,OAAO,EAAEJ,IAAI,CAACK;AANhB,SACOL,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,cADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAiBC,QAAC,WAAD;AACE,MAAA,MAAM,EAAEP,WAAW,CAACO,GADtB;AAEE,MAAA,KAAK,EAAEP,WAAW,CAACQ,KAFrB;AAGE,MAAA,WAAW,EAAER,WAAW,CAACS,iBAH3B;AAIE,MAAA,QAAQ,EAAET,WAAW,CAACU,KAJxB;AAKE,MAAA,OAAO,EAAEV,WAAW,CAACW;AALvB;AAAA;AAAA;AAAA;AAAA;AAlBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnDD;;GAAMd,Q;UAIeN,S;;;KAJfM,Q;AAqDN,SAASA,QAAT","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PostPageStyled } from './PostPage.style';\nimport { getRessources, getRessource } from '../../services/apiServices';\nimport { PostInfo } from '../../components/PostInfo/PostInfo';\nimport { PostDetails } from '../../components/PostDetails/PostDetails';\n\nconst PostPage = () => {\n\n  const [posts, setPosts] = useState([]);\n  const [currentPost, setCurrentPost] = useState(null);\n  const { postId } = useParams();\n\n  useEffect(() => {\n    if (!postId) {\n      async function fetchMyAPI() {\n        let response = await getRessources('post');\n        setPosts(response);\n      }\n      fetchMyAPI();\n    } else {\n      async function fetchMyAPI() {\n        let response = await getRessource('post', postId);\n        setCurrentPost(response);\n      }\n      fetchMyAPI();\n    }\n  }, [postId]);\n\n  return (\n    <PostPageStyled>\n      {!currentPost ?\n        <Fragment>\n          <h1>List des derniers articles</h1>\n          {\n            posts.map(post => (\n              <PostInfo\n                key={post._id}\n                postId={post._id}\n                title={post.title}\n                description={post.title_description}\n                imageUrl={post.image}\n                content={post.contenu}\n              />\n            ))\n          }\n        </Fragment>\n        :\n        <PostDetails\n          postId={currentPost._id}\n          title={currentPost.title}\n          description={currentPost.title_description}\n          imageUrl={currentPost.image}\n          content={currentPost.contenu} \n        />\n      }\n    </PostPageStyled>\n  );\n};\n\nexport { PostPage };\n"]},"metadata":{},"sourceType":"module"}