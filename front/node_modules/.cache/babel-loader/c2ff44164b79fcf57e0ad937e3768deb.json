{"ast":null,"code":"var _jsxFileName = \"/home/lokman/cours/Blog/front/src/pages/admin/UserAdminPage/UserAdminPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { map } from 'lodash';\nimport { useHistory } from 'react-router-dom';\nimport { UserAdminPageStyled } from './UserAdminPage.style';\nimport { getRessources, deleteRessource } from '../../../services/apiServices';\nimport { Button } from '../../../components/ui-elements/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserAdminPage = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const response = await getRessources('user', localStorage.getItem('jwtToken'));\n      setUsers(response);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const remove = id => {\n    deleteRessource('user', id).then(data => {\n      if (data.success) {\n        const newPost = users.filter(user => user._id !== id);\n        setUsers(newPost);\n      }\n    });\n  };\n\n  console.log('users :>> ', users);\n  return /*#__PURE__*/_jsxDEV(UserAdminPageStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Liste des users: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), users ? map(users, user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user__element\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Pseudo: \", user.pseudo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"admin: \", user.admin ? 'oui' : 'non']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button__container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => null,\n          value: \"modifier\",\n          background: \"#fff\",\n          color: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => remove(user._id),\n          value: \"supprimer\",\n          background: \"#fff\",\n          color: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, user._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Aucun users trouv\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserAdminPage, \"MQ11mXz8z8XasvzApYeDYGt555Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserAdminPage;\nexport { UserAdminPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAdminPage\");","map":{"version":3,"sources":["/home/lokman/cours/Blog/front/src/pages/admin/UserAdminPage/UserAdminPage.jsx"],"names":["React","Fragment","useEffect","useState","map","useHistory","UserAdminPageStyled","getRessources","deleteRessource","Button","UserAdminPage","users","setUsers","history","fetchMyAPI","response","localStorage","getItem","remove","id","then","data","success","newPost","filter","user","_id","console","log","pseudo","admin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,+BAA/C;AACA,SAASC,MAAT,QAAuB,+CAAvB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMR,aAAa,CAAC,MAAD,EAASS,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAT,CAApC;AACAL,MAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,KAHD;;AAKAD,IAAAA,UAAU;AACX,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMI,MAAM,GAAIC,EAAD,IAAQ;AACrBX,IAAAA,eAAe,CAAC,MAAD,EAASW,EAAT,CAAf,CAA4BC,IAA5B,CAAiCC,IAAI,IAAI;AACvC,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,cAAMC,OAAO,GAAGZ,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaP,EAAlC,CAAhB;AACAP,QAAAA,QAAQ,CAACW,OAAD,CAAR;AACD;AACF,KALD;AAMD,GAPD;;AASAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BjB,KAA1B;AAEA,sBACE,QAAC,mBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEIA,KAAK,GACHP,GAAG,CAACO,KAAD,EAAQc,IAAI,iBACb;AAAoB,MAAA,SAAS,EAAC,eAA9B;AAAA,8BACE;AAAA,gCACE;AAAA,iCAAcA,IAAI,CAACI,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,gCAAaJ,IAAI,CAACK,KAAL,GAAa,KAAb,GAAqB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,IAAvB;AAA6B,UAAA,KAAK,EAAC,UAAnC;AAA8C,UAAA,UAAU,EAAE,MAA1D;AAAkE,UAAA,KAAK,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMZ,MAAM,CAACO,IAAI,CAACC,GAAN,CAA7B;AAAyC,UAAA,KAAK,EAAC,WAA/C;AAA2D,UAAA,UAAU,EAAE,MAAvE;AAA+E,UAAA,KAAK,EAAE;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAUD,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA,YADC,CADA,gBAcL,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA/CD;;GAAMhB,a;UAEYL,U;;;KAFZK,a;AAiDN,SAASA,aAAT","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { map } from 'lodash';\nimport { useHistory } from 'react-router-dom';\nimport { UserAdminPageStyled } from './UserAdminPage.style';\nimport { getRessources, deleteRessource } from '../../../services/apiServices'\nimport { Button } from '../../../components/ui-elements/Button/Button';\n\nconst UserAdminPage = () => {\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const response = await getRessources('user', localStorage.getItem('jwtToken'));\n      setUsers(response);\n    }\n\n    fetchMyAPI();\n  }, []);\n\n  const remove = (id) => {\n    deleteRessource('user', id).then(data => {\n      if (data.success) {\n        const newPost = users.filter(user => user._id !== id);\n        setUsers(newPost);\n      }\n    })\n  }\n\n  console.log('users :>> ', users);\n\n  return (\n    <UserAdminPageStyled>\n      <h1>Liste des users: </h1>\n      { users ?\n          map(users, user => (\n            <div key={user._id} className=\"user__element\">\n              <div>\n                <div>Pseudo: {user.pseudo}</div>\n                <div>admin: {user.admin ? 'oui' : 'non'}</div>\n              </div>\n              <div className=\"button__container\">\n                <Button onClick={() => null} value=\"modifier\" background={\"#fff\"} color={\"black\"} />\n                <Button onClick={() => remove(user._id)} value=\"supprimer\" background={\"#fff\"} color={\"black\"}/>\n              </div>\n            </div>\n          ))    \n      :\n        <Fragment>\n          Aucun users trouv√©.\n        </Fragment>\n      }\n    </UserAdminPageStyled>\n  );\n};\n\nexport { UserAdminPage };\n"]},"metadata":{},"sourceType":"module"}