{"ast":null,"code":"var _jsxFileName = \"/home/lokman/cours/Blog/front/blog/src/pages/PostPage/PostPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PostPageStyled } from './PostPage.style';\nimport { getRessources, getRessource } from '../../services/apiServices';\nimport { PostInfo } from '../../components/PostInfo/PostInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [currentPost, setCurrentPost] = useState(null);\n  const params = useParams();\n  useEffect(() => {\n    if (!params.postId) {\n      async function fetchMyAPI() {\n        let response = await getRessources('post');\n        setPosts(response);\n      }\n\n      fetchMyAPI();\n    } else {\n      async function fetchMyAPI() {\n        let response = await getRessource('post', params.postId);\n        setCurrentPost(response);\n      }\n\n      fetchMyAPI();\n    }\n  }, []);\n  console.log('params :>> ', params);\n  console.log('posts :>> ', posts);\n  console.log('currentPost :>> ', currentPost);\n  return /*#__PURE__*/_jsxDEV(PostPageStyled, {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(PostInfo, {\n      postId: post._id,\n      title: post.title,\n      description: post.title_description,\n      imageUrl: post.image,\n      content: post.contenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostPage, \"DxhpNcWRA9KhsA2J56qvYZ3itxw=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\nexport { PostPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/home/lokman/cours/Blog/front/blog/src/pages/PostPage/PostPage.jsx"],"names":["React","useState","useEffect","useParams","PostPageStyled","getRessources","getRessource","PostInfo","PostPage","posts","setPosts","currentPost","setCurrentPost","params","postId","fetchMyAPI","response","console","log","map","post","_id","title","title_description","image","contenu"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,4BAA5C;AACA,SAASC,QAAT,QAAyB,oCAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAMY,MAAM,GAAGV,SAAS,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACW,MAAM,CAACC,MAAZ,EAAoB;AAClB,qBAAeC,UAAf,GAA4B;AAC1B,YAAIC,QAAQ,GAAG,MAAMX,aAAa,CAAC,MAAD,CAAlC;AACAK,QAAAA,QAAQ,CAACM,QAAD,CAAR;AACD;;AACDD,MAAAA,UAAU;AACX,KAND,MAMO;AACL,qBAAeA,UAAf,GAA4B;AAC1B,YAAIC,QAAQ,GAAG,MAAMV,YAAY,CAAC,MAAD,EAASO,MAAM,CAACC,MAAhB,CAAjC;AACAF,QAAAA,cAAc,CAACI,QAAD,CAAd;AACD;;AACDD,MAAAA,UAAU;AACX;AACF,GAdQ,EAcN,EAdM,CAAT;AAgBAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,MAA3B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BT,KAA1B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,WAAhC;AAEA,sBACE,QAAC,cAAD;AAAA,cACGF,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACb,QAAC,QAAD;AACE,MAAA,MAAM,EAAEA,IAAI,CAACC,GADf;AAEE,MAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,MAAA,WAAW,EAAEF,IAAI,CAACG,iBAHpB;AAIE,MAAA,QAAQ,EAAEH,IAAI,CAACI,KAJjB;AAKE,MAAA,OAAO,EAAEJ,IAAI,CAACK;AALhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;GAAMjB,Q;UAIWL,S;;;KAJXK,Q;AAyCN,SAASA,QAAT","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { PostPageStyled } from './PostPage.style';\nimport { getRessources, getRessource } from '../../services/apiServices';\nimport { PostInfo } from '../../components/PostInfo/PostInfo';\n\nconst PostPage = () => {\n\n  const [posts, setPosts] = useState([]);\n  const [currentPost, setCurrentPost] = useState(null);\n  const params = useParams();\n\n  useEffect(() => {\n    if (!params.postId) {\n      async function fetchMyAPI() {\n        let response = await getRessources('post');\n        setPosts(response);\n      }\n      fetchMyAPI();\n    } else {\n      async function fetchMyAPI() {\n        let response = await getRessource('post', params.postId);\n        setCurrentPost(response);\n      }\n      fetchMyAPI();\n    }\n  }, []);\n\n  console.log('params :>> ', params);\n  console.log('posts :>> ', posts);\n  console.log('currentPost :>> ', currentPost);\n\n  return (\n    <PostPageStyled>\n      {posts.map(post => (\n        <PostInfo\n          postId={post._id}\n          title={post.title}\n          description={post.title_description}\n          imageUrl={post.image}\n          content={post.contenu}\n        />\n      ))}\n    </PostPageStyled>\n  );\n};\n\nexport { PostPage };\n"]},"metadata":{},"sourceType":"module"}